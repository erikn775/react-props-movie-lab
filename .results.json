{
  "stats": {
    "suites": 4,
    "tests": 9,
    "passes": 0,
    "pending": 0,
    "failures": 10,
    "start": "2021-02-23T17:33:58.857Z",
    "end": "2021-02-23T17:33:58.891Z",
    "duration": 34
  },
  "tests": [
    {
      "title": "assigns a default prop of 'Unknown' for the title prop",
      "fullTitle": "<MovieCard /> assigns a default prop of 'Unknown' for the title prop",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: Cannot read property 'title' of undefined\n    at Context.<anonymous> (test/1-MovieCard.test.js:15:35)\n    at processImmediate (internal/timers.js:461:21)",
        "message": "Cannot read property 'title' of undefined"
      }
    },
    {
      "title": "assigns a default prop of null for the IMDBRating prop",
      "fullTitle": "<MovieCard /> assigns a default prop of null for the IMDBRating prop",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: Cannot read property 'IMDBRating' of undefined\n    at Context.<anonymous> (test/1-MovieCard.test.js:19:35)\n    at processImmediate (internal/timers.js:461:21)",
        "message": "Cannot read property 'IMDBRating' of undefined"
      }
    },
    {
      "title": "assigns a default prop of ['No Genre(s) Found'] for the genres prop",
      "fullTitle": "<MovieCard /> assigns a default prop of ['No Genre(s) Found'] for the genres prop",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: Cannot read property 'genres' of undefined\n    at Context.<anonymous> (test/1-MovieCard.test.js:23:50)\n    at processImmediate (internal/timers.js:461:21)",
        "message": "Cannot read property 'genres' of undefined"
      }
    },
    {
      "title": "assigns a default prop of 'default' for the poster prop",
      "fullTitle": "<MovieCard /> assigns a default prop of 'default' for the poster prop",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: Cannot read property 'poster' of undefined\n    at Context.<anonymous> (test/1-MovieCard.test.js:27:35)\n    at processImmediate (internal/timers.js:461:21)",
        "message": "Cannot read property 'poster' of undefined"
      }
    },
    {
      "title": "uses the poster prop as a background image, rendering only the necessary HTML",
      "fullTitle": "<CardFront /> uses the poster prop as a background image, rendering only the necessary HTML",
      "duration": 4,
      "currentRetry": 0,
      "err": {
        "message": "expected '<div class=\"card-front\" style=\"background-image:url()\"></div>' to equal '<div class=\"card-front\" style=\"background-image:url(you spin me right round)\"></div>'",
        "showDiff": true,
        "actual": "<div class=\"card-front\" style=\"background-image:url()\"></div>",
        "expected": "<div class=\"card-front\" style=\"background-image:url(you spin me right round)\"></div>",
        "stack": "AssertionError: expected '<div class=\"card-front\" style=\"background-image:url()\"></div>' to equal '<div class=\"card-front\" style=\"background-image:url(you spin me right round)\"></div>'\n    at Context.<anonymous> (test/2-CardFront.test.js:15:33)\n    at processImmediate (internal/timers.js:461:21)"
      }
    },
    {
      "title": "correctly renders the title prop",
      "fullTitle": "<CardBack /> correctly renders the title prop",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "expected '' to include 'Rolling in the Deep'",
        "showDiff": false,
        "actual": "",
        "stack": "AssertionError: expected '' to include 'Rolling in the Deep'\n    at Context.<anonymous> (test/3-CardBack.test.js:24:21)\n    at processImmediate (internal/timers.js:461:21)"
      }
    },
    {
      "title": "correctly renders the genres prop as comma seperated strings",
      "fullTitle": "<CardBack /> correctly renders the genres prop as comma seperated strings",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "message": "expected '' to include 'Never gonna give you up, Never gonna let you down, Never gonna run around and desert you'",
        "showDiff": false,
        "actual": "",
        "stack": "AssertionError: expected '' to include 'Never gonna give you up, Never gonna let you down, Never gonna run around and desert you'\n    at Context.<anonymous> (test/3-CardBack.test.js:28:21)\n    at processImmediate (internal/timers.js:461:21)"
      }
    },
    {
      "title": "renders 'No Rating Found' in an <h4> if the IMDBRating prop is null",
      "fullTitle": "<CardBack /> renders 'No Rating Found' in an <h4> if the IMDBRating prop is null",
      "duration": 2,
      "currentRetry": 0,
      "err": {
        "stack": "Error: Method “text” is only meant to be run on a single node. 0 found instead.\n    at ShallowWrapper.single (node_modules/enzyme/build/ShallowWrapper.js:1618:17)\n    at ShallowWrapper.text (node_modules/enzyme/build/ShallowWrapper.js:844:21)\n    at Context.<anonymous> (test/3-CardBack.test.js:33:34)\n    at processImmediate (internal/timers.js:461:21)",
        "message": "Method “text” is only meant to be run on a single node. 0 found instead."
      }
    },
    {
      "title": "renders an <img> tag if the IMDBRating prop is valid",
      "fullTitle": "<CardBack /> renders an <img> tag if the IMDBRating prop is valid",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "message": "expected false to equal true",
        "showDiff": true,
        "actual": "false",
        "expected": "true",
        "stack": "AssertionError: expected false to equal true\n    at Context.<anonymous> (test/3-CardBack.test.js:37:46)\n    at processImmediate (internal/timers.js:461:21)"
      }
    }
  ],
  "pending": [],
  "failures": [
    {
      "title": "\"before each\" hook for \"renders at least one <MovieCard /> component\"",
      "fullTitle": "<MovieShowcase /> \"before each\" hook for \"renders at least one <MovieCard /> component\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "ReferenceError: List is not defined\n    at /home/erikn775/react/react-props-movie-lab/src/MovieShowcase.js:8:46\n    at Array.map (<anonymous>)\n    at MovieShowcase._this.generateMovieCards (src/MovieShowcase.js:8:32)\n    at MovieShowcase.render (src/MovieShowcase.js:15:15)\n    at ReactShallowRenderer._mountClassComponent (node_modules/react-test-renderer/cjs/react-test-renderer-shallow.development.js:195:37)\n    at ReactShallowRenderer.render (node_modules/react-test-renderer/cjs/react-test-renderer-shallow.development.js:143:14)\n    at /home/erikn775/react/react-props-movie-lab/node_modules/enzyme-adapter-react-16/build/ReactSixteenAdapter.js:287:35\n    at withSetStateAllowed (node_modules/enzyme-adapter-utils/build/Utils.js:94:16)\n    at Object.render (node_modules/enzyme-adapter-react-16/build/ReactSixteenAdapter.js:286:68)\n    at new ShallowWrapper (node_modules/enzyme/build/ShallowWrapper.js:119:22)\n    at shallow (node_modules/enzyme/build/shallow.js:19:10)\n    at Context.<anonymous> (test/0-MovieShowcase.test.js:17:13)\n    at processImmediate (internal/timers.js:461:21)",
        "message": "List is not defined"
      }
    },
    {
      "title": "assigns a default prop of 'Unknown' for the title prop",
      "fullTitle": "<MovieCard /> assigns a default prop of 'Unknown' for the title prop",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: Cannot read property 'title' of undefined\n    at Context.<anonymous> (test/1-MovieCard.test.js:15:35)\n    at processImmediate (internal/timers.js:461:21)",
        "message": "Cannot read property 'title' of undefined"
      }
    },
    {
      "title": "assigns a default prop of null for the IMDBRating prop",
      "fullTitle": "<MovieCard /> assigns a default prop of null for the IMDBRating prop",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: Cannot read property 'IMDBRating' of undefined\n    at Context.<anonymous> (test/1-MovieCard.test.js:19:35)\n    at processImmediate (internal/timers.js:461:21)",
        "message": "Cannot read property 'IMDBRating' of undefined"
      }
    },
    {
      "title": "assigns a default prop of ['No Genre(s) Found'] for the genres prop",
      "fullTitle": "<MovieCard /> assigns a default prop of ['No Genre(s) Found'] for the genres prop",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: Cannot read property 'genres' of undefined\n    at Context.<anonymous> (test/1-MovieCard.test.js:23:50)\n    at processImmediate (internal/timers.js:461:21)",
        "message": "Cannot read property 'genres' of undefined"
      }
    },
    {
      "title": "assigns a default prop of 'default' for the poster prop",
      "fullTitle": "<MovieCard /> assigns a default prop of 'default' for the poster prop",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: Cannot read property 'poster' of undefined\n    at Context.<anonymous> (test/1-MovieCard.test.js:27:35)\n    at processImmediate (internal/timers.js:461:21)",
        "message": "Cannot read property 'poster' of undefined"
      }
    },
    {
      "title": "uses the poster prop as a background image, rendering only the necessary HTML",
      "fullTitle": "<CardFront /> uses the poster prop as a background image, rendering only the necessary HTML",
      "duration": 4,
      "currentRetry": 0,
      "err": {
        "message": "expected '<div class=\"card-front\" style=\"background-image:url()\"></div>' to equal '<div class=\"card-front\" style=\"background-image:url(you spin me right round)\"></div>'",
        "showDiff": true,
        "actual": "<div class=\"card-front\" style=\"background-image:url()\"></div>",
        "expected": "<div class=\"card-front\" style=\"background-image:url(you spin me right round)\"></div>",
        "stack": "AssertionError: expected '<div class=\"card-front\" style=\"background-image:url()\"></div>' to equal '<div class=\"card-front\" style=\"background-image:url(you spin me right round)\"></div>'\n    at Context.<anonymous> (test/2-CardFront.test.js:15:33)\n    at processImmediate (internal/timers.js:461:21)"
      }
    },
    {
      "title": "correctly renders the title prop",
      "fullTitle": "<CardBack /> correctly renders the title prop",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "expected '' to include 'Rolling in the Deep'",
        "showDiff": false,
        "actual": "",
        "stack": "AssertionError: expected '' to include 'Rolling in the Deep'\n    at Context.<anonymous> (test/3-CardBack.test.js:24:21)\n    at processImmediate (internal/timers.js:461:21)"
      }
    },
    {
      "title": "correctly renders the genres prop as comma seperated strings",
      "fullTitle": "<CardBack /> correctly renders the genres prop as comma seperated strings",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "message": "expected '' to include 'Never gonna give you up, Never gonna let you down, Never gonna run around and desert you'",
        "showDiff": false,
        "actual": "",
        "stack": "AssertionError: expected '' to include 'Never gonna give you up, Never gonna let you down, Never gonna run around and desert you'\n    at Context.<anonymous> (test/3-CardBack.test.js:28:21)\n    at processImmediate (internal/timers.js:461:21)"
      }
    },
    {
      "title": "renders 'No Rating Found' in an <h4> if the IMDBRating prop is null",
      "fullTitle": "<CardBack /> renders 'No Rating Found' in an <h4> if the IMDBRating prop is null",
      "duration": 2,
      "currentRetry": 0,
      "err": {
        "stack": "Error: Method “text” is only meant to be run on a single node. 0 found instead.\n    at ShallowWrapper.single (node_modules/enzyme/build/ShallowWrapper.js:1618:17)\n    at ShallowWrapper.text (node_modules/enzyme/build/ShallowWrapper.js:844:21)\n    at Context.<anonymous> (test/3-CardBack.test.js:33:34)\n    at processImmediate (internal/timers.js:461:21)",
        "message": "Method “text” is only meant to be run on a single node. 0 found instead."
      }
    },
    {
      "title": "renders an <img> tag if the IMDBRating prop is valid",
      "fullTitle": "<CardBack /> renders an <img> tag if the IMDBRating prop is valid",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "message": "expected false to equal true",
        "showDiff": true,
        "actual": "false",
        "expected": "true",
        "stack": "AssertionError: expected false to equal true\n    at Context.<anonymous> (test/3-CardBack.test.js:37:46)\n    at processImmediate (internal/timers.js:461:21)"
      }
    }
  ],
  "passes": []
}